@page "/orders"
@using MasterDetails_BlazorWebAss_11.Shared.Models;
@inject HttpClient http;

<div class="row">
    <div class="col-lg-9">
        <h2>Order List</h2>
    </div>

    <div class="col-lg-3 text-right">
        <a href="/order/create" role="button" class="btn btn-primary btn-sm">Create New Order</a>
    </div>
</div>

@if (Orders != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Customer Name</th>
                <th>Order Date</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Orders)
            {
                <tr>
                    <td>@order.OrderId</td>
                    <td>@order.CustomerName</td>
                    <td>@order.OrderDate.ToShortDateString()</td>
                    <td>@(order.IsActive)</td>
                    <td>
                        <a href="/order/details/@order.OrderId" class="btn btn-info btn-sm">Details</a>
                        <a href="/order/edit/@order.OrderId" class="btn btn-info btn-sm">Edit</a>
                        <button @onclick="@(e => DeleteOrder(order.OrderId))" class="btn btn-danger btn-sm">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject]
    protected IJSRuntime JSRuntime { get; set; }
    protected List<Order> Orders = new();

    protected override async Task OnInitializedAsync()
    {
        await GetOrder();
    }

    protected async Task GetOrder()
    {
        Orders = await http.GetFromJsonAsync<List<Order>>("api/Order");
    }

    //public async Task DeleteOrder(int id)
    //{
    //    await http.DeleteAsync("api/Order/"+id);

    //    await GetOrder();
    //}
    protected async Task DeleteOrder(int id)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this order?");

        if (confirmed)
        {
            await http.DeleteAsync("api/Order/" + id);
            await GetOrder();
        }
    }
}
